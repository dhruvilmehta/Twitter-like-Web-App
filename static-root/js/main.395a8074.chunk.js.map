{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/feed.js","tweets/components.js","App.js","reportWebVitals.js","index.js"],"names":["backEndlookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","console","log","open","setRequestHeader","onload","status","detail","response","window","location","href","indexOf","onerror","e","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","type","onClick","event","preventDefault","stopPropagation","tweetId","id","apiTweetAction","UserLink","children","UserDisplay","user","nameDisplay","includeFullName","first_name","last_name","Fragment","UserPicture","ParentTweet","parent","Tweet","isRetweet","reTweeter","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","TweetsList","newTweets","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","useEffect","final","concat","next","results","alert","handleDidRetweet","newTweet","updatedTweetsInit","unshift","updatedFinalTweets","map","item","index","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","onSubmit","newVal","current","value","ref","required","FeedList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","App","src","logo","alt","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEl","getElementById","ReactDOM","render","createElement","tweetsEl","dataset","querySelectorAll","forEach","container","tweetFeedEl"],"mappings":"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","file":"static/js/main.395a8074.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function getCookie(name) {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n      const cookies = document.cookie.split(';');\r\n      for (let i = 0; i < cookies.length; i++) {\r\n          const cookie = cookies[i].trim();\r\n          // Does this cookie string begin with the name we want?\r\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport function backEndlookup(method,endpoint,callback,data){\r\n  let jsonData;\r\n  if(data){\r\n    jsonData=JSON.stringify(data)\r\n  }\r\n  const xhr=new XMLHttpRequest()\r\n    const url = `http://localhost:8000/api${endpoint}`\r\n    xhr.responseType=\"json\"\r\n    const csrftoken=getCookie('csrftoken');\r\n    console.log(\"csrf\",csrftoken)\r\n    \r\n    xhr.open(method,url)\r\n    xhr.setRequestHeader(\"Content-Type\",\"application/json\")\r\n    if(csrftoken){\r\n      // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\",\"XMLHttpRequest\")  //=> Not Working\r\n      xhr.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\")\r\n      xhr.setRequestHeader('X-CSRFToken',csrftoken)   // We can use JWT Token  ...Not used here\r\n    }\r\n    xhr.onload=function(){\r\n      // console.log(\"xhr response\",xhr.response,xhr.status)\r\n      if(xhr.status===403){\r\n        const detail=xhr.response.detail\r\n        console.log(detail)\r\n        if(detail===\"Authentication credentials were not provided.\"){\r\n          if(window.location.href.indexOf(\"login\")===-1){\r\n            window.location.href=\"/login?showLoginRequired=true\"\r\n          }\r\n        }\r\n      }\r\n      callback(xhr.response,xhr.status)\r\n    }\r\n    \r\n    xhr.onerror=function(e){\r\n      console.log(\"error\",e)\r\n      callback({\"message\":\"The request was an error\"},400)\r\n    }\r\n  xhr.send(jsonData)\r\n}\r\n\r\n\r\n","import {backEndlookup} from '../lookup'\r\n\r\nexport function apiTweetCreate(newTweet,callback){\r\n    backEndlookup(\"POST\",\"/tweets/create/\",callback,{content:newTweet})\r\n}\r\n\r\nexport function apiTweetAction(tweetId,action,callback){\r\n    const data={id:tweetId,action:action}\r\n    backEndlookup(\"POST\",\"/tweets/action/\",callback,data)\r\n}\r\n\r\nexport function apiTweetDetail(tweetId,callback){\r\n    backEndlookup(\"GET\",`/tweets/${tweetId}`,callback)\r\n}\r\n\r\nexport function apiTweetFeed(callback,nextUrl){\r\n    let endpoint=\"/tweets/feed/\"\r\n    if(nextUrl!==null && nextUrl!==undefined){\r\n        endpoint=nextUrl.replace(\"http://localhost:8000/api\",\"\") \r\n    }\r\n    // console.log(endpoint,nextUrl)\r\n    backEndlookup(\"GET\",endpoint,callback)\r\n}\r\n\r\nexport function apiTweetList(username,callback,nextUrl){\r\n    let endpoint=\"/tweets/\"\r\n    if(username){\r\n        endpoint=`/tweets/?username=${username}`\r\n    }\r\n    if(nextUrl!==null && nextUrl!==undefined){\r\n        endpoint=nextUrl.replace(\"http://localhost:8000/api\",\"\") \r\n    }\r\n    console.log(endpoint,nextUrl)\r\n    backEndlookup(\"GET\",endpoint,callback)\r\n}","import React from 'react'\r\nimport {apiTweetAction} from './lookup'\r\n\r\nexport function ActionBtn(props){\r\n    const {tweet,action,didPerformAction}=props\r\n    const likes=tweet.likes? tweet.likes : 0\r\n    const className=props.className ? props.className : 'btn btn-primary btn-sm'\r\n    const actionDisplay=action.display ? action.display : 'Action'\r\n    const handleActionBackendEvent=(response,status)=>{\r\n      console.log(\"response button.js line 10\",response,status)\r\n      if((status===200 || status===201) && didPerformAction){\r\n        didPerformAction(response,status)\r\n        // setUserlike(true)\r\n        // setLikes(response.likes)\r\n      }\r\n      // if (action.type==='like'){\r\n      //   if(userlike===true){\r\n      //       setLikes(likes-1)\r\n      //       setUserlike(false)\r\n      //   }else{\r\n      //       setLikes(likes+1)\r\n      //       setUserlike(true)\r\n      //   }\r\n      // } \r\n    }\r\n    const handleClick=(event)=>{\r\n      event.preventDefault()\r\n      event.stopPropagation()\r\n      apiTweetAction(tweet.id,action.type,handleActionBackendEvent)\r\n    }\r\n    const display=action.type==='like' ? `${likes} ${actionDisplay}` : actionDisplay\r\n    return <button className={className} onClick={handleClick}>{display}</button> \r\n  }","import React from 'react'\r\n\r\n\r\nexport function UserLink(props){\r\n  const {username}=props\r\n  const handleUserLink=(event)=>{\r\n    window.location.href=`/profiles/${username}`\r\n  }\r\n  return <span className='pointer' onClick={handleUserLink}>{props.children}\r\n  </span>\r\n}\r\n\r\nexport function UserDisplay(props){\r\n  const {user,includeFullName}=props\r\n  const nameDisplay=includeFullName === true ? `${user.first_name} ${user.last_name} ` : null\r\n  return <React.Fragment>{nameDisplay} <UserLink username={user.username}>@{user.username}</UserLink></React.Fragment>\r\n}\r\n\r\nexport function UserPicture(props){\r\n  const {user}=props\r\n  return <UserLink username={user.username}><span className=\"mx-1 px-3 py-2 rounded-circle bg-dark text-white\">\r\n  {user.username[0]}\r\n</span>\r\n</UserLink>\r\n}","import React,{useState} from 'react'\r\nimport {ActionBtn} from './buttons'\r\nimport {UserDisplay,UserPicture} from '../profiles'\r\n\r\nexport function ParentTweet(props){\r\n    const {tweet}=props\r\n    return tweet.parent ? <Tweet isRetweet reTweeter={props.reTweeter} hideActions className={' '} tweet={tweet.parent} /> : null\r\n}\r\nexport function Tweet(props){\r\n    // console.log(tweet)   returns => {id: 130, content: \"dhruvil mehta\", likes: 0, is_retweet: false, parent: null}\r\n  const {tweet,didRetweet,hideActions,isRetweet,reTweeter}=props\r\n  const [actionTweet,setActionTweet]=useState(props.tweet ? props.tweet : null)\r\n  let className=props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n  className=isRetweet===true ? `${className} p-2 border rounded` : className\r\n\r\n  const path=window.location.pathname\r\n  const match =path.match(/(?<tweetid>\\d+)/)\r\n  const urlTweetId=match ? match.groups.tweetid : -1\r\n\r\n  const isDetail=`${tweet.id}`===`${urlTweetId}`\r\n  const handleLink=(event)=>{\r\n      event.preventDefault()\r\n      event.stopPropagation()\r\n      window.location.href=`/${tweet.id}`\r\n  }\r\n  const handlePerformAction=(newActionTweet,status)=>{\r\n    if(status===200){\r\n      setActionTweet(newActionTweet)\r\n    }\r\n    else if(status===201){\r\n      // let the tweet list know\r\n      if(didRetweet){\r\n        didRetweet(newActionTweet)\r\n      }\r\n    }\r\n  }\r\n  return <div className={className}>            \r\n{/* onClick={handleLink}  up */}\r\n  {isRetweet===true && <div className=\"mb-2\"><span className=\"small text-muted\">Retweet via <UserDisplay user={reTweeter}/></span></div>}\r\n<div className=\"d-flex\">\r\n  <div className=\"\">\r\n    <UserPicture user={tweet.user} />\r\n  </div>\r\n  <div className=\"col-11\">\r\n<div>\r\n  <p><UserDisplay includeFullName user={tweet.user}/></p>\r\n  <p>{tweet.content}</p>\r\n  <ParentTweet tweet={tweet} reTweeter={tweet.user} />\r\n</div>\r\n<div className='btn btn-group px-0'>\r\n{(actionTweet && hideActions!==true) && <React.Fragment>\r\n<ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:'like',display:'Likes'}}/>\r\n<ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:'unlike',display:'Unlikes'}}/>\r\n<ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:'retweet',display:'retweet'}}/>\r\n</React.Fragment>\r\n}\r\n{isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n}","import React,{useEffect,useState} from 'react'\r\nimport {apiTweetList} from './lookup'\r\nimport {Tweet} from './detail'\r\n\r\nexport function TweetsList(props){\r\n    const [tweetsInit,setTweetsInit]=useState(props.newTweets ? props.newTweets : [])\r\n    const [tweets,setTweets]=useState([])\r\n    const [nextUrl,setNextUrl]=useState(null)\r\n    const [tweetsDidSet,setTweetsDidSet]=useState(false)\r\n    // console.log(props.newTweets)           Both returns same\r\n    // console.log([...props.newTweets])      Both returns same\r\n  \r\n    // setTweetsInit([...props.newTweets].concat(tweetsInit)) Goes into infinite loop if used here\r\n    useEffect(()=>{\r\n      const final = [...props.newTweets].concat(tweetsInit)\r\n      if(final.length !== tweets.length){\r\n        setTweets(final)\r\n      }\r\n    },[props.newTweets,tweets,tweetsInit])\r\n    useEffect(()=>{\r\n      if(tweetsDidSet===false){\r\n        const handleTweetListLookup=(response,status)=>{\r\n          console.log(response,status)\r\n          setNextUrl(response.next)\r\n          // console.log(props.username)\r\n        if (status===200){\r\n          setTweetsInit(response.results)\r\n          setTweetsDidSet(true)\r\n        }else{\r\n          alert(\"List.js There was an error\")\r\n        }\r\n      }\r\n      apiTweetList(props.username,handleTweetListLookup)\r\n      }\r\n    \r\n    },[tweetsInit,tweetsDidSet,setTweetsDidSet,props.username])\r\n  \r\n    const handleDidRetweet=(newTweet)=>{\r\n      const updatedTweetsInit=[...tweetsInit]\r\n      updatedTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updatedTweetsInit)\r\n  \r\n      const updatedFinalTweets=[...tweets]\r\n      updatedFinalTweets.unshift(tweets)\r\n      setTweets(updatedFinalTweets)\r\n    }\r\n    const handleLoadNext=(event)=>{\r\n      event.preventDefault()\r\n      if(nextUrl!==null){\r\n        const handleLoadNextResponse=(response,status)=>{\r\n          console.log(response,status)\r\n          // console.log(props.username)\r\n          if (status===200){\r\n            setNextUrl(response.next)\r\n            const newTweets=[...tweets.concat(response.results)]\r\n            setTweetsInit(newTweets)\r\n            setTweets(newTweets)\r\n          }else{\r\n            alert(\"List.js There was an error\")\r\n          }\r\n        }\r\n        apiTweetList(props.username,handleLoadNextResponse,nextUrl)\r\n      }\r\n    }\r\n    console.log(\"next Url \",nextUrl)\r\n\r\n      return <React.Fragment>{tweets.map((item,index)=>{\r\n        return <Tweet tweet={item} didRetweet={handleDidRetweet} className='my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`}/>\r\n    })}\r\n    {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load Next</button>}\r\n    </React.Fragment>\r\n  }","import React,{useState} from 'react'\r\nimport {apiTweetCreate} from './lookup'\r\n\r\nexport function TweetCreate(props){\r\n    const textAreaRef=React.createRef()\r\n    const {didTweet}=props\r\n    const handleBackendUpdate=(response,status)=>{\r\n        // console.log(response,status)\r\n        if(status===201){\r\n          didTweet(response)\r\n        }else{\r\n          // console.log(response)\r\n          alert(\"An Error Occured please try again\")\r\n        }\r\n        \r\n      }\r\n    const handleSubmit=(event)=>{\r\n      event.preventDefault()\r\n      const newVal=textAreaRef.current.value\r\n      // backend api request handler\r\n      // console.log(\"new Value\",newVal)\r\n      apiTweetCreate(newVal,handleBackendUpdate)\r\n      // console.log(tempNewTweets)   returns =>  0: {content: \"jshad lfhs\", likes: 0, id: 12313}\r\n      textAreaRef.current.value=''\r\n    }\r\n    return <div className='col-12'>\r\n            <form onSubmit={handleSubmit}>\r\n              <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'></textarea>\r\n              <button type='submit' className='btn btn-primary my-3'>Tweet</button>\r\n            </form>\r\n          </div>\r\n  \r\n}","import React,{useEffect,useState} from 'react'\r\nimport {apiTweetFeed} from './lookup'\r\nimport {Tweet} from './detail'\r\n\r\nexport function FeedList(props){\r\n    const [tweetsInit,setTweetsInit]=useState(props.newTweets ? props.newTweets : [])\r\n    const [tweets,setTweets]=useState([])\r\n    const [nextUrl,setNextUrl]=useState(null)\r\n    const [tweetsDidSet,setTweetsDidSet]=useState(false)\r\n    // console.log(props.newTweets)           Both returns same\r\n    // console.log([...props.newTweets])      Both returns same\r\n  \r\n    // setTweetsInit([...props.newTweets].concat(tweetsInit)) Goes into infinite loop if used here\r\n    useEffect(()=>{\r\n      const final = [...props.newTweets].concat(tweetsInit)\r\n      if(final.length !== tweets.length){\r\n        setTweets(final)\r\n      }\r\n    },[props.newTweets,tweets,tweetsInit])\r\n    useEffect(()=>{\r\n      if(tweetsDidSet===false){\r\n        const handleTweetListLookup=(response,status)=>{\r\n          console.log(response,status)\r\n          setNextUrl(response.next)\r\n          // console.log(props.username)\r\n        if (status===200){\r\n          setTweetsInit(response.results)\r\n          setTweetsDidSet(true)\r\n        }\r\n      }\r\n      apiTweetFeed(handleTweetListLookup)\r\n      }\r\n    \r\n    },[tweetsInit,tweetsDidSet,setTweetsDidSet,props.username])\r\n  \r\n    const handleDidRetweet=(newTweet)=>{\r\n      const updatedTweetsInit=[...tweetsInit]\r\n      updatedTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updatedTweetsInit)\r\n  \r\n      const updatedFinalTweets=[...tweets]\r\n      updatedFinalTweets.unshift(tweets)\r\n      setTweets(updatedFinalTweets)\r\n    }\r\n    const handleLoadNext=(event)=>{\r\n      event.preventDefault()\r\n      if(nextUrl!==null){\r\n        const handleLoadNextResponse=(response,status)=>{\r\n          console.log(response,status)\r\n          // console.log(props.username)\r\n          if (status===200){\r\n            setNextUrl(response.next)\r\n            const newTweets=[...tweets.concat(response.results)]\r\n            setTweetsInit(newTweets)\r\n            setTweets(newTweets)\r\n          }\r\n        }\r\n        apiTweetFeed(handleLoadNextResponse,nextUrl)\r\n      }\r\n    }\r\n    // console.log(\"next Url \",nextUrl)\r\n\r\n      return <React.Fragment>{tweets.map((item,index)=>{\r\n        return <Tweet tweet={item} didRetweet={handleDidRetweet} className='my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`}/>\r\n    })}\r\n    {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load Next</button>}\r\n    </React.Fragment>\r\n  }","import React,{useEffect,useState} from 'react'\r\nimport {TweetsList} from './list'\r\nimport {TweetCreate} from './create'\r\nimport {apiTweetDetail} from './lookup'\r\nimport {Tweet} from './detail'\r\nimport {FeedList} from './feed'\r\n\r\nexport function FeedComponent(props){\r\n  const [newTweets,setNewTweets]=useState([])\r\n\r\n  const canTweet=props.canTweet===\"false\" ? false : true\r\n  const handleNewTweet=(newTweet)=>{\r\n    // backend api response handler\r\n      let tempNewTweets=[...newTweets]\r\n      tempNewTweets.unshift(newTweet)\r\n      setNewTweets(tempNewTweets)\r\n      \r\n    }\r\n  return <div className={props.className}>\r\n          {canTweet===true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n          <FeedList newTweets={newTweets} {...props}/>\r\n        </div>\r\n}\r\n\r\nexport function TweetsComponent(props){\r\n  const [newTweets,setNewTweets]=useState([])\r\n\r\n  const canTweet=props.canTweet===\"false\" ? false : true\r\n  const handleNewTweet=(newTweet)=>{\r\n    // backend api response handler\r\n      let tempNewTweets=[...newTweets]\r\n      tempNewTweets.unshift(newTweet)\r\n      setNewTweets(tempNewTweets)\r\n      \r\n    }\r\n  return <div className={props.className}>\r\n          {canTweet===true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n          <TweetsList newTweets={newTweets} {...props}/>\r\n        </div>\r\n}\r\n\r\nexport function TweetDetailComponent(props){\r\n  const {tweetId}=props\r\n  const [didLookup,setDidLookup]=useState(false)\r\n  const [tweet,setTweet]=useState(null)\r\n  const handleBackendLookup=(response,status)=>{\r\n    if(status===200){\r\n      setTweet(response)\r\n    }else{\r\n      alert(\"There was an error finding your tweet. \")\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n    if(didLookup===false){\r\n      apiTweetDetail(tweetId,handleBackendLookup)\r\n      setDidLookup(true)\r\n    }\r\n  },[didLookup,setDidLookup,tweetId])\r\n  \r\n  return tweet===null ? null : <Tweet tweet={tweet} className={props.className} />\r\n}\r\n\r\n  \r\n","import React,{useEffect,useState} from 'react'\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from './tweets'\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {FeedComponent,TweetsComponent,TweetDetailComponent} from './tweets'\n\nconst appEl = document.getElementById('root')\nif(appEl){\n  ReactDOM.render(<App />,appEl);\n}\nconst e=React.createElement\nconst tweetsEl=document.getElementById('tweetme-2')\nif(tweetsEl){\n  ReactDOM.render(e(TweetsComponent,tweetsEl.dataset),tweetsEl);\n}\nconst tweetDetailElements=document.querySelectorAll(\".tweetme-2-detail\")\ntweetDetailElements.forEach(container=>{\n  ReactDOM.render(e(TweetDetailComponent,container.dataset),container)\n})\n\nconst tweetFeedEl=document.getElementById('tweetme-2-feed')\nif(tweetFeedEl){\n  ReactDOM.render(e(FeedComponent,tweetFeedEl.dataset),tweetFeedEl);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}