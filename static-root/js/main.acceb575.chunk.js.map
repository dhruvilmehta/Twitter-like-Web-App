{"version":3,"sources":["logo.svg","lookup/components.js","tweets/buttons.js","tweets/lookup.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/components.js","App.js","reportWebVitals.js","index.js"],"names":["backEndlookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","response","status","onerror","e","send","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","console","log","type","onClick","event","preventDefault","stopPropagation","tweetId","id","apiTweetAction","ParentTweet","parent","Tweet","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","window","location","pathname","urlTweetId","groups","tweetid","isDetail","handleLink","href","handlePerformAction","newActionTweet","content","Fragment","TweetsList","newTweets","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","useEffect","final","concat","username","apiTweetList","alert","handleDidRetweet","newTweet","updatedTweetsInit","unshift","updatedFinalTweets","map","item","index","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","onSubmit","newVal","current","value","ref","required","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","App","src","logo","alt","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEl","getElementById","ReactDOM","render","createElement","tweetsEl","dataset","querySelectorAll","forEach","container"],"mappings":"wMAAe,G,MAAA,IAA0B,kC,MCgBlC,SAASA,EAAcC,EAAOC,EAASC,EAASC,GACrD,IAAIC,EACDD,IACDC,EAASC,KAAKC,UAAUH,IAE1B,IAAMI,EAAI,IAAIC,eACNC,EAAG,mCAA+BR,GACxCM,EAAIG,aAAa,OACjB,IAAMC,EAxBV,SAAmBC,GACjB,IAAIC,EAAc,KAClB,GAAIC,SAASC,QAA8B,KAApBD,SAASC,OAE5B,IADA,IAAMC,EAAUF,SAASC,OAAOE,MAAM,KAC7BC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CACrC,IAAMH,EAASC,EAAQE,GAAGE,OAE1B,GAAIL,EAAOM,UAAU,EAAGT,EAAKO,OAAS,KAAQP,EAAO,IAAM,CACvDC,EAAcS,mBAAmBP,EAAOM,UAAUT,EAAKO,OAAS,IAChE,OAIZ,OAAON,EAWWU,CAAU,aAC1BhB,EAAIiB,KAAKxB,EAAOS,GAChBF,EAAIkB,iBAAiB,eAAe,oBACjCd,IAEDJ,EAAIkB,iBAAiB,mBAAmB,kBACxClB,EAAIkB,iBAAiB,cAAcd,IAGrCJ,EAAImB,OAAO,WAETxB,EAASK,EAAIoB,SAASpB,EAAIqB,SAG5BrB,EAAIsB,QAAQ,SAASC,GAEnB5B,EAAS,CAAC,QAAU,4BAA4B,MAEpDK,EAAIwB,KAAK3B,G,WCvCJ,SAAS4B,EAAUC,GAAO,IACtBC,EAA+BD,EAA/BC,MAAMC,EAAyBF,EAAzBE,OAAOC,EAAkBH,EAAlBG,iBACdC,EAAMH,EAAMG,MAAOH,EAAMG,MAAQ,EACjCC,EAAUL,EAAMK,UAAYL,EAAMK,UAAY,yBAC9CC,EAAcJ,EAAOK,QAAUL,EAAOK,QAAU,SAChDC,EAAyB,SAACd,EAASC,GACvCc,QAAQC,IAAI,YAAYhB,EAASC,GACpB,MAATA,GAAyB,MAATA,IAAiBQ,GACnCA,EAAiBT,EAASC,IAmBxBY,EAAsB,SAAdL,EAAOS,KAAP,UAA0BP,EAA1B,YAAmCE,GAAkBA,EACnE,OAAO,wBAAQD,UAAWA,EAAWO,QANnB,SAACC,GACjBA,EAAMC,iBACND,EAAME,kBCrBL,SAAwBC,EAAQd,EAAOjC,GAE1CH,EAAc,OAAO,kBAAkBG,EAD5B,CAACgD,GAAGD,EAAQd,OAAOA,IDqB5BgB,CAAejB,EAAMgB,GAAGf,EAAOS,KAAKH,IAG/B,SAAqDD,I,kBE5BzD,SAASY,EAAYnB,GAAO,IACxBC,EAAOD,EAAPC,MACP,OAAOA,EAAMmB,OAAS,qBAAKf,UAAU,MAAf,SACtB,sBAAKA,UAAU,oCAAf,UACA,mBAAGA,UAAU,wBAAb,qBACA,cAACgB,EAAD,CAAOC,aAAW,EAACjB,UAAW,IAAKJ,MAAOA,EAAMmB,cAEvC,KAEN,SAASC,EAAMrB,GAAM,IAEnBC,EAA8BD,EAA9BC,MAAMsB,EAAwBvB,EAAxBuB,WAAWD,EAAatB,EAAbsB,YAFE,EAGSE,mBAASxB,EAAMC,MAAQD,EAAMC,MAAQ,MAH9C,mBAGnBwB,EAHmB,KAGPC,EAHO,KAIpBrB,EAAUL,EAAMK,UAAYL,EAAMK,UAAY,0BAG9CsB,EADKC,OAAOC,SAASC,SACTH,MAAL,YAAW,WAAX,cACPI,EAAWJ,EAAQA,EAAMK,OAAOC,SAAW,EAE3CC,EAAS,UAAGjC,EAAMgB,MAAT,UAAmBc,GAC5BI,EAAW,SAACtB,GACdA,EAAMC,iBACND,EAAME,kBACNa,OAAOC,SAASO,KAAhB,WAAyBnC,EAAMgB,KAE7BoB,EAAoB,SAACC,EAAe3C,GAC5B,MAATA,EACD+B,EAAeY,GAEA,MAAT3C,GAEH4B,GACDA,EAAWe,IAInB,OAAO,sBAAKjC,UAAWA,EAAWO,QAASuB,EAApC,UACP,gCACA,8BAAIlC,EAAMgB,GAAV,MAAiBhB,EAAMsC,WACvB,cAACpB,EAAD,CAAalB,MAAOA,OAEpB,sBAAKI,UAAU,gBAAf,UACEoB,IAA6B,IAAdH,GAAuB,eAAC,IAAMkB,SAAP,WACxC,cAACzC,EAAD,CAAWE,MAAOwB,EAAatB,iBAAkBkC,EAAqBnC,OAAQ,CAACS,KAAK,OAAOJ,QAAQ,WACnG,cAACR,EAAD,CAAWE,MAAOwB,EAAatB,iBAAkBkC,EAAqBnC,OAAQ,CAACS,KAAK,SAASJ,QAAQ,aACrG,cAACR,EAAD,CAAWE,MAAOwB,EAAatB,iBAAkBkC,EAAqBnC,OAAQ,CAACS,KAAK,UAAUJ,QAAQ,iBAGxF,IAAb2B,EAAoB,KAAO,wBAAQ7B,UAAU,iCAAiCO,QAASuB,EAA5D,wB,WC/CrB,SAASM,EAAWzC,GAAO,IAAD,EACIwB,mBAASxB,EAAM0C,UAAY1C,EAAM0C,UAAY,IADjD,mBACtBC,EADsB,KACXC,EADW,OAEJpB,mBAAS,IAFL,mBAEtBqB,EAFsB,KAEfC,EAFe,OAGQtB,oBAAS,GAHjB,mBAGtBuB,EAHsB,KAGTC,EAHS,KAQ7BC,qBAAU,WACR,IAAMC,EAAQ,YAAIlD,EAAM0C,WAAWS,OAAOR,GACvCO,EAAMhE,SAAW2D,EAAO3D,QACzB4D,EAAUI,KAEZ,CAAClD,EAAM0C,UAAUG,EAAOF,IAC1BM,qBAAU,WACR,IAAkB,IAAfF,EAAqB,EFJvB,SAAsBK,EAASnF,GAClC,IAAID,EAAS,WACVoF,IACCpF,EAAS,qBAAD,OAAsBoF,IAElCtF,EAAc,MAAME,EAASC,GES3BoF,CAAarD,EAAMoD,UATW,SAAC1D,EAASC,GAEzB,MAATA,GACFiD,EAAclD,GACdsD,GAAgB,IAEhBM,MAAM,4BAMV,CAACX,EAAWI,EAAaC,EAAgBhD,EAAMoD,WAEjD,IAAMG,EAAiB,SAACC,GACtB,IAAMC,EAAkB,YAAId,GAC5Bc,EAAkBC,QAAQF,GAC1BZ,EAAca,GAEd,IAAME,EAAmB,YAAId,GAC7Bc,EAAmBD,QAAQb,GAC3BC,EAAUa,IAEV,OAAOd,EAAOe,KAAI,SAACC,EAAKC,GACtB,OAAO,cAACzC,EAAD,CAAOpB,MAAO4D,EAAMtC,WAAYgC,EAAkBlD,UAAU,uCAA5D,UAA0GyD,EAA1G,kB,WCzCR,SAASC,EAAY/D,GACxB,IAAMgE,EAAYC,IAAMC,YACjBC,EAAUnE,EAAVmE,SACDC,EAAoB,SAAC1E,EAASC,GAEpB,MAATA,EACDwE,EAASzE,GAGT4D,MAAM,sCAaZ,OAAO,qBAAKjD,UAAU,SAAf,SACC,uBAAMgE,SAVK,SAACxD,GAClBA,EAAMC,iBACN,IAAMwD,EAAON,EAAYO,QAAQC,MHfnC1G,EAAc,OAAO,kBGkBGsG,EHlBwB,CAAC7B,QGkBhC+B,IAEfN,EAAYO,QAAQC,MAAM,IAGpB,UACE,0BAAUC,IAAKT,EAAaU,UAAU,EAAMrE,UAAU,eAAe1B,KAAK,UAC1E,wBAAQgC,KAAK,SAASN,UAAU,uBAAhC,wBCtBP,SAASsE,EAAgB3E,GAAO,IAAD,EACLwB,mBAAS,IADJ,mBAC7BkB,EAD6B,KACnBkC,EADmB,KAG9BC,EAA0B,UAAjB7E,EAAM6E,SAQrB,OAAO,sBAAKxE,UAAWL,EAAMK,UAAtB,WACa,IAAXwE,GAAmB,cAACd,EAAD,CAAaI,SARpB,SAACX,GAElB,IAAIsB,EAAc,YAAIpC,GACtBoC,EAAcpB,QAAQF,GACtBoB,EAAaE,IAIkDzE,UAAU,gBACrE,cAACoC,EAAD,aAAYC,UAAWA,GAAe1C,OAIzC,SAAS+E,EAAqB/E,GAAO,IACnCgB,EAAShB,EAATgB,QADkC,EAEVQ,oBAAS,GAFC,mBAElCwD,EAFkC,KAExBC,EAFwB,OAGlBzD,mBAAS,MAHS,mBAGlCvB,EAHkC,KAG5BiF,EAH4B,KAInCC,EAAoB,SAACzF,EAASC,GACtB,MAATA,EACDuF,EAASxF,GAET4D,MAAM,4CAUV,OAPAL,qBAAU,YACO,IAAZ+B,KJxBA,SAAwBhE,EAAQ/C,GACnCH,EAAc,MAAD,kBAAkBkD,GAAU/C,GIwBvCmH,CAAepE,EAAQmE,GACvBF,GAAa,MAEf,CAACD,EAAUC,EAAajE,IAEX,OAARf,EAAe,KAAO,cAACoB,EAAD,CAAOpB,MAAOA,EAAOI,UAAWL,EAAMK,YCVtDgF,MAzBf,WAEE,OACE,qBAAKhF,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKiF,IAAKC,EAAMlF,UAAU,WAAWmF,IAAI,SACzC,sCACO,8CADP,0BAGA,8BACE,cAACb,EAAD,MAEF,mBACEtE,UAAU,WACV+B,KAAK,sBACLqD,OAAO,SACPC,IAAI,sBAJN,+BCNOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCARQ,EAAQvH,SAASwH,eAAe,QACnCD,GACDE,IAASC,OAAO,cAAC,EAAD,IAAQH,GAE1B,IAAMvG,EAAEoE,IAAMuC,cACRC,EAAS5H,SAASwH,eAAe,aACpCI,GACDH,IAASC,OAAO1G,EAAE8E,EAAgB8B,EAASC,SAASD,GAE5B5H,SAAS8H,iBAAiB,qBAChCC,SAAQ,SAAAC,GAC1BP,IAASC,OAAO1G,EAAEkF,EAAqB8B,EAAUH,SAASG,MAM5DlB,M","file":"static/js/main.acceb575.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function getCookie(name) {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n      const cookies = document.cookie.split(';');\r\n      for (let i = 0; i < cookies.length; i++) {\r\n          const cookie = cookies[i].trim();\r\n          // Does this cookie string begin with the name we want?\r\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport function backEndlookup(method,endpoint,callback,data){\r\n  let jsonData;\r\n  if(data){\r\n    jsonData=JSON.stringify(data)\r\n  }\r\n  const xhr=new XMLHttpRequest()\r\n    const url = `http://localhost:8000/api${endpoint}`\r\n    xhr.responseType=\"json\"\r\n    const csrftoken=getCookie('csrftoken');\r\n    xhr.open(method,url)\r\n    xhr.setRequestHeader(\"content-Type\",\"application/json\")\r\n    if(csrftoken){\r\n      // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\",\"XMLHttpRequest\")  => Not Working\r\n      xhr.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\")\r\n      xhr.setRequestHeader('X-CSRFToken',csrftoken)   // We can use JWT Token  ...Not used here\r\n    }\r\n    \r\n    xhr.onload=function(){\r\n      // console.log(\"xhr response\",xhr.response,xhr.status)\r\n      callback(xhr.response,xhr.status)\r\n    }\r\n    \r\n    xhr.onerror=function(e){\r\n      // console.log(e)\r\n      callback({\"message\":\"The request was an error\"},400)\r\n    }\r\n  xhr.send(jsonData)\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport {apiTweetAction} from './lookup'\r\n\r\nexport function ActionBtn(props){\r\n    const {tweet,action,didPerformAction}=props\r\n    const likes=tweet.likes? tweet.likes : 0\r\n    const className=props.className ? props.className : 'btn btn-primary btn-sm'\r\n    const actionDisplay=action.display ? action.display : 'Action'\r\n    const handleActionBackendEvent=(response,status)=>{\r\n      console.log(\"response \",response,status)\r\n      if((status===200 || status===201) && didPerformAction){\r\n        didPerformAction(response,status)\r\n        // setUserlike(true)\r\n        // setLikes(response.likes)\r\n      }\r\n      // if (action.type==='like'){\r\n      //   if(userlike===true){\r\n      //       setLikes(likes-1)\r\n      //       setUserlike(false)\r\n      //   }else{\r\n      //       setLikes(likes+1)\r\n      //       setUserlike(true)\r\n      //   }\r\n      // } \r\n    }\r\n    const handleClick=(event)=>{\r\n      event.preventDefault()\r\n      event.stopPropagation()\r\n      apiTweetAction(tweet.id,action.type,handleActionBackendEvent)\r\n    }\r\n    const display=action.type==='like' ? `${likes} ${actionDisplay}` : actionDisplay\r\n    return <button className={className} onClick={handleClick}>{display}</button> \r\n  }","import {backEndlookup} from '../lookup'\r\n\r\nexport function apiTweetCreate(newTweet,callback){\r\n    backEndlookup(\"POST\",\"/tweets/create/\",callback,{content:newTweet})\r\n}\r\n\r\nexport function apiTweetAction(tweetId,action,callback){\r\n    const data={id:tweetId,action:action}\r\n    backEndlookup(\"POST\",\"/tweets/action/\",callback,data)\r\n}\r\n\r\nexport function apiTweetDetail(tweetId,callback){\r\n    backEndlookup(\"GET\",`/tweets/${tweetId}`,callback)\r\n}\r\n\r\nexport function apiTweetList(username,callback){\r\n    let endpoint=\"/tweets/\"\r\n    if(username){\r\n        endpoint=`/tweets/?username=${username}`\r\n    }\r\n    backEndlookup(\"GET\",endpoint,callback)\r\n}","import React,{useState} from 'react'\r\nimport {ActionBtn} from './buttons'\r\n\r\nexport function ParentTweet(props){\r\n    const {tweet}=props\r\n    return tweet.parent ? <div className='row'>\r\n    <div className='col-11 mx-auto p-3 border rounded'>\r\n    <p className='mb-0 text-muted small'>ReTweet</p>\r\n    <Tweet hideActions className={' '} tweet={tweet.parent} />\r\n    </div>\r\n    </div> : null\r\n}\r\nexport function Tweet(props){\r\n    // console.log(tweet)   returns => {id: 130, content: \"dhruvil mehta\", likes: 0, is_retweet: false, parent: null}\r\n  const {tweet,didRetweet,hideActions}=props\r\n  const [actionTweet,setActionTweet]=useState(props.tweet ? props.tweet : null)\r\n  const className=props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n\r\n  const path=window.location.pathname\r\n  const match =path.match(/(?<tweetid>\\d+)/)\r\n  const urlTweetId=match ? match.groups.tweetid : -1\r\n\r\n  const isDetail=`${tweet.id}`===`${urlTweetId}`\r\n  const handleLink=(event)=>{\r\n      event.preventDefault()\r\n      event.stopPropagation()\r\n      window.location.href=`/${tweet.id}`\r\n  }\r\n  const handlePerformAction=(newActionTweet,status)=>{\r\n    if(status===200){\r\n      setActionTweet(newActionTweet)\r\n    }\r\n    else if(status===201){\r\n      // let the tweet list know\r\n      if(didRetweet){\r\n        didRetweet(newActionTweet)\r\n      }\r\n    }\r\n  }\r\nreturn <div className={className} onClick={handleLink}>\r\n<div>\r\n<p>{tweet.id} - {tweet.content}</p>\r\n<ParentTweet tweet={tweet} />\r\n</div>\r\n<div className='btn btn-group'>\r\n{(actionTweet && hideActions!==true) && <React.Fragment>\r\n<ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:'like',display:'Likes'}}/>\r\n<ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:'unlike',display:'Unlikes'}}/>\r\n<ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:'retweet',display:'retweet'}}/>\r\n</React.Fragment>\r\n}\r\n{isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\r\n</div>\r\n</div>\r\n}","import React,{useEffect,useState} from 'react'\r\nimport {apiTweetList} from './lookup'\r\nimport {Tweet} from './detail'\r\n\r\nexport function TweetsList(props){\r\n    const [tweetsInit,setTweetsInit]=useState(props.newTweets ? props.newTweets : [])\r\n    const [tweets,setTweets]=useState([])\r\n    const [tweetsDidSet,setTweetsDidSet]=useState(false)\r\n    // console.log(props.newTweets)           Both returns same\r\n    // console.log([...props.newTweets])      Both returns same\r\n  \r\n    // setTweetsInit([...props.newTweets].concat(tweetsInit)) Goes into infinite loop if used here\r\n    useEffect(()=>{\r\n      const final = [...props.newTweets].concat(tweetsInit)\r\n      if(final.length !== tweets.length){\r\n        setTweets(final)\r\n      }\r\n    },[props.newTweets,tweets,tweetsInit])\r\n    useEffect(()=>{\r\n      if(tweetsDidSet===false){\r\n        const handleTweetListLookup=(response,status)=>{\r\n          // console.log(response,status)\r\n        if (status===200){\r\n          setTweetsInit(response)\r\n          setTweetsDidSet(true)\r\n        }else{\r\n          alert(\"There was an error\")\r\n        }\r\n      }\r\n      apiTweetList(props.username,handleTweetListLookup)\r\n      }\r\n    \r\n    },[tweetsInit,tweetsDidSet,setTweetsDidSet,props.username])\r\n  \r\n    const handleDidRetweet=(newTweet)=>{\r\n      const updatedTweetsInit=[...tweetsInit]\r\n      updatedTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updatedTweetsInit)\r\n  \r\n      const updatedFinalTweets=[...tweets]\r\n      updatedFinalTweets.unshift(tweets)\r\n      setTweets(updatedFinalTweets)\r\n    }\r\n      return tweets.map((item,index)=>{\r\n        return <Tweet tweet={item} didRetweet={handleDidRetweet} className='my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`}/>\r\n    })\r\n  }","import React,{useState} from 'react'\r\nimport {apiTweetCreate} from './lookup'\r\n\r\nexport function TweetCreate(props){\r\n    const textAreaRef=React.createRef()\r\n    const {didTweet}=props\r\n    const handleBackendUpdate=(response,status)=>{\r\n        // console.log(response,status)\r\n        if(status===201){\r\n          didTweet(response)\r\n        }else{\r\n          // console.log(response)\r\n          alert(\"An Error Occured please try again\")\r\n        }\r\n        \r\n      }\r\n    const handleSubmit=(event)=>{\r\n      event.preventDefault()\r\n      const newVal=textAreaRef.current.value\r\n      // backend api request handler\r\n      // console.log(\"new Value\",newVal)\r\n      apiTweetCreate(newVal,handleBackendUpdate)\r\n      // console.log(tempNewTweets)   returns =>  0: {content: \"jshad lfhs\", likes: 0, id: 12313}\r\n      textAreaRef.current.value=''\r\n    }\r\n    return <div className='col-12'>\r\n            <form onSubmit={handleSubmit}>\r\n              <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'></textarea>\r\n              <button type='submit' className='btn btn-primary my-3'>Tweet</button>\r\n            </form>\r\n          </div>\r\n  \r\n}","import React,{useEffect,useState} from 'react'\r\nimport {TweetsList} from './list'\r\nimport {TweetCreate} from './create'\r\nimport {apiTweetDetail} from './lookup'\r\nimport {Tweet} from './detail'\r\n\r\nexport function TweetsComponent(props){\r\n  const [newTweets,setNewTweets]=useState([])\r\n\r\n  const canTweet=props.canTweet===\"false\" ? false : true\r\n  const handleNewTweet=(newTweet)=>{\r\n    // backend api response handler\r\n      let tempNewTweets=[...newTweets]\r\n      tempNewTweets.unshift(newTweet)\r\n      setNewTweets(tempNewTweets)\r\n      \r\n    }\r\n  return <div className={props.className}>\r\n          {canTweet===true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n          <TweetsList newTweets={newTweets} {...props}/>\r\n        </div>\r\n}\r\n\r\nexport function TweetDetailComponent(props){\r\n  const {tweetId}=props\r\n  const [didLookup,setDidLookup]=useState(false)\r\n  const [tweet,setTweet]=useState(null)\r\n  const handleBackendLookup=(response,status)=>{\r\n    if(status===200){\r\n      setTweet(response)\r\n    }else{\r\n      alert(\"There was an error finding your tweet. \")\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n    if(didLookup===false){\r\n      apiTweetDetail(tweetId,handleBackendLookup)\r\n      setDidLookup(true)\r\n    }\r\n  },[didLookup,setDidLookup,tweetId])\r\n  \r\n  return tweet===null ? null : <Tweet tweet={tweet} className={props.className} />\r\n}\r\n\r\n  \r\n","import React,{useEffect,useState} from 'react'\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from './tweets'\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {TweetsComponent,TweetDetailComponent} from './tweets'\n\nconst appEl = document.getElementById('root')\nif(appEl){\n  ReactDOM.render(<App />,appEl);\n}\nconst e=React.createElement\nconst tweetsEl=document.getElementById('tweetme-2')\nif(tweetsEl){\n  ReactDOM.render(e(TweetsComponent,tweetsEl.dataset),tweetsEl);\n}\nconst tweetDetailElements=document.querySelectorAll(\".tweetme-2-detail\")\ntweetDetailElements.forEach(container=>{\n  ReactDOM.render(e(TweetDetailComponent,container.dataset),container)\n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}